{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","style","color","mode","id","type","backgroundColor","href","target","Navbar","to","title","aboutText","onClick","toggleMode","height","width","TextForm","useState","text","setText","heading","value","placeholder","onChange","e","rows","data","toUpperCase","length","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","element","prototype","PropTypes","string","isRequired","defaultProps","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","cls","body","classList","remove","add","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f2897ac3.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function About(props) {\n\n    return (\n      <div className=\"Container\">\n        <h1\n          style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n          className=\"my-3\"\n        >\n          About Me\n        </h1>\n        <div className=\"accordion\" id=\"accordionExample\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"headingOne\">\n              <button\n                className=\"accordion-button\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseOne\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseOne\"\n                style={{\n                  backgroundColor: props.mode === \"dark\" ? \"#1d1a1a\" : \"white\",\n                  color: props.mode === \"dark\" ? \"white\" : \"black\",\n                }}\n              >\n                ðŸ’—About the Creater of this revolutionary website\n              </button>\n            </h2>\n            <div\n              id=\"collapseOne\"\n              className=\"accordion-collapse collapse show\"\n              aria-labelledby=\"headingOne\"\n              data-bs-parent=\"#accordionExample\"\n              style={{\n                backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\n                color: props.mode === \"dark\" ? \"white\" : \"black\",\n              }}\n            >\n              <div\n                className=\"accordion-body \" style={{\n                  backgroundColor: props.mode === \"dark\" ? \"#2d6fd0\" : \"white\",\n                  color: props.mode === \"dark\" ? \"white\" : \"black\",\n                }}\n              >\n                <strong>\n                  This is a simple text opeations based website made for fun ðŸ’–\n                </strong>{\"  \"}\n                \n              </div>\n            </div>\n          </div>\n          <div\n            className=\"accordion-item\"\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"#2d6fd0\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\n            }}\n          >\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\n              <button\n                style={{\n                  backgroundColor: props.mode === \"dark\" ? \"#1d1a1a\" : \"white\",\n                  color: props.mode === \"dark\" ? \"white\" : \"black\",\n                }}\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseTwo\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseTwo\"\n              >\n                Working of this website\n              </button>\n            </h2>\n            <div\n              style={{\n                backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\n                color: props.mode === \"dark\" ? \"white\" : \"black\",\n              }}\n              id=\"collapseTwo\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingTwo\"\n              data-bs-parent=\"#accordionExample\"\n            >\n              <div\n                className=\"accordion-body\"\n                style={{\n                  backgroundColor: props.mode === \"dark\" ? \"#2d6fd0\" : \"white\",\n                  color: props.mode === \"dark\" ? \"white\" : \"black\",\n                }}\n              >\n                <strong>Enter Your text and select options<br></br></strong>{\" \"}\n                When you enter your text, you can convert it to Upper case, Lower case, \n                You can format your code if it is not, you can copy your text on clipboard or can clear the text that you have entered.\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"#2d6fd0\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\n            }}\n            className=\"accordion-item\"\n          >\n            <h2 className=\"accordion-header\" id=\"headingThree\">\n              <button\n                style={{\n                  backgroundColor: props.mode === \"dark\" ? \"#1d1a1a\" : \"white\",\n                  color: props.mode === \"dark\" ? \"white\" : \"black\",\n                }}\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapseThree\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapseThree\"\n              >\n                Connect with me ðŸ« \n              </button>\n            </h2>\n            <div\n              style={{\n                backgroundColor: props.mode === \"dark\" ? \"#2d6fd0\" : \"white\",\n                color: props.mode === \"dark\" ? \"white\" : \"black\",\n              }}\n              id=\"collapseThree\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"headingThree\"\n              data-bs-parent=\"#accordionExample\"\n            >\n              <div className=\"accordion-body\">\n              <a href=\"https://twitter.com/imHarry404?ref_src=twsrc%5Etfw\" target={\"blank\"} ><h5>Twitter</h5></a> \n              <a href=\"https://www.linkedin.com/in/imharry404/\" target={\"blank\"} ><h5>LinkedIn</h5></a> \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport \"../css/TextForm.css\"\nimport {Link} from 'react-router-dom'\n\n\n\nexport default function Navbar(props) {\n  return (\n    <nav\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\n    >\n      <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          {props.title}\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/about\">\n                {\" \"}\n                {props.aboutText}\n              </Link>\n            </li>\n          </ul>\n          <div className=\"d-flex\">\n            <div\n              className=\"bg-primary rounded mx-2\"\n              onClick={() => {\n                props.toggleMode(\"primary\");\n              }}\n              style={{ height: \"20px\", width: \"20px\" }}\n            ></div>\n            <div\n              className=\"bg-danger rounded mx-2\"\n              onClick={() => {\n                props.toggleMode(\"danger\");\n              }}\n              style={{ height: \"20px\", width: \"20px\" }}\n            ></div>\n            <div\n              className=\"bg-success rounded mx-2\"\n              onClick={() => {\n                props.toggleMode(\"success\");\n              }}\n              style={{ height: \"20px\", width: \"20px\" }}\n            ></div>\n            <div\n              className=\"bg-warning rounded mx-2\"\n              onClick={() => {\n                props.toggleMode(\"warning\");\n              }}\n              style={{ height: \"20px\", width: \"20px\" }}\n            ></div>\n            <div\n              className=\"bg-info rounded mx-2\"\n              onClick={() => {\n                props.toggleMode(\"info\");\n              }}\n              style={{ height: \"20px\", width: \"20px\" }}\n            ></div>\n            <div\n              className=\"bg-secondary rounded mx-2\"\n              onClick={() => {\n                props.toggleMode(\"secondary\");\n              }}\n              style={{ height: \"20px\", width: \"20px\" }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nNavbar.prototype = {\n  title:PropTypes.string.isRequired,\n  aboutText:PropTypes.string.isRequired //it is requied\n};\n\n// default , if no props were passed by mistake and it is required\n\nNavbar.defaultProps={\n    title:\"Set title here\",\n    aboutText:\"put About here\",\n}","import React, { useState } from 'react'\nimport '../css/TextForm.css'\n\nexport default function TextForm(props) {\n\n  const handleOnChange = (e) => {\n    setText(e.target.value)\n    // console.log(\"handleonchange was clicked\")\n\n  }\n  const handleUppperClick = () => {\n    // console.log(\"upperclick was clicked\")\n    let data = text.toUpperCase()\n    if(data.length===0){\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\n    }\n    else{\n      setText(data)\n      props.showAlert(\"Converted to Upper case !\",\"success\")\n    }\n  }\n  const handleloweClick = () => {\n    // console.log('lower case')\n    let data = text.toLowerCase();\n    if(data.length===0){\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\n    }\n    else{\n    setText(data);\n    props.showAlert(\"Converted to Lower case !\",\"success\")\n    }\n  }\n  const handleClearClick = () => {\n    // console.log('lower case')\n    let data = text\n    if(data.length===0){\n    props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\n    }\n    else{\n      let data=''\n    setText(data);\n    props.showAlert(\"Text Cleared\",\"success\")}\n  };\n  \n  // handle copy\n  const handleCopy=()=>{\n    let data=text\n    if(data.length===0){\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\n    }\n    else{\n    let data=document.getElementById('myBox')\n    data.select()\n    navigator.clipboard.writeText(data.value)\n    props.showAlert(\"Text Copied to clipboard\",\"success\")\n    }\n  }\n  // handle extra spaces\n  const handleSpace = () => {\n    let data=text\n    if(data.length===0){\n      props.showAlert(\"Error!.. Enter Text PleaseðŸ™„ !\",\"danger\")\n    }\n    else{\n      let data = text.split(/[ ]+/)\n    setText(data.join(\" \"));\n    props.showAlert(\"All extra spaces were removed\",\"success\")\n    }\n  };\n\n\n  const [text, setText] = useState('')\n  return (\n    <>\n      <div\n        className=\"containter\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n      >\n        <h1>{props.heading}</h1>\n        <div className=\"mb3\">\n          <textarea\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"#272424\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\n            }}\n            className=\"form-control\"\n            value={text}\n            placeholder=\"Enter your text here\"\n            onChange={handleOnChange}\n            id=\"myBox\"\n            rows=\"5\"\n          ></textarea>\n        </div>\n        <button\n          className=\"btn btn-success mx-2 my-2\"\n          value={text}\n          onClick={handleUppperClick}\n        >\n          Convert to Upper case\n        </button>\n        <button\n          className=\"btn btn-danger mx-2 my-2\"\n          value={text}\n          onClick={handleloweClick}\n        >\n          Convert to lower case\n        </button>\n\n        <button\n          className=\"btn btn-info mx-2 my-2\"\n          value={text}\n          onClick={handleCopy}\n        >\n          Copy Text\n        </button>\n\n        <button\n          className=\"btn btn-dark mx-2 my-2\"\n          value={text}\n          onClick={handleSpace}\n        >\n          Remove Extra Space\n        </button>\n\n        <button\n          className=\"btn btn-warning mx-2 my-2\"\n          value={text}\n          onClick={handleClearClick}\n        >\n          Clear text\n        </button>\n      </div>\n\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n      >\n        <h1>Your text Summary</h1>\n        <p>\n          <b>\n            {\n              text.split(\" \").filter((element) => {\n                return element.length !== 0;\n              }).length\n            }\n          </b>{\" \"}\n          words <b>{text.length}</b> characters total ..... and{\" \"}\n          <b className=\"time\">{0.008 * text.split(\" \").length}</b> time will be\n          taken to read your text\n        </p>\n        <p>\n          <b className=\"fb_blue\">Facebook</b> out of 250/ {250 - text.length}{\" \"}\n          characters remaining..<b className=\"gg_red\">Google</b> out of 300/{\" \"}\n          {300 - text.length} characters remaining..\n          <b className=\"tw_sky\">Twitter</b> out of 280/ {280 - text.length}{\" \"}\n          characters remaining\n        </p>\n        <h2>PreviewðŸ˜‰</h2>\n        <p>{text.length > 0 ? text : \"Enter some text to preview hereðŸ¥²\"}</p>\n      </div>\n    </>\n  );\n}\n","import React from 'react'\n\nfunction Alert(props) {\n    const capitalize=(word)=>{\n        const lower=word.toLowerCase();\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\n    }\n    return (\n      <div style={{height:'50px',width:'350px'}} className=\"mx-auto my-2 text-center\" >\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`}role=\"alert\"><strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}</div>}\n      </div>\n    );\n}\n\nexport default Alert\n","import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./components/Alert\";\n// importing react router\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode]=useState('light')\n  const [alert, setAlert] = useState(null)\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n        setAlert(null)\n    }, 1000);\n  }\n\n  const removeBodyClasses=()=>{\n    document.body.classList.remove(\"bg-light\")\n    document.body.classList.remove(\"bg-dark\")\n    document.body.classList.remove(\"bg-success\");\n    document.body.classList.remove(\"bg-primary\")\n    document.body.classList.remove(\"bg-secondary\")\n    document.body.classList.remove(\"bg-info\");\n    document.body.classList.remove(\"bg-warning\")\n    document.body.classList.remove(\"bg-danger\")\n  }\n  const toggleMode=(cls)=>{\n    removeBodyClasses()\n    document.body.classList.add('bg-'+cls)\n  if(mode===cls){\n    setMode('dark')\n    // document.body.style.backgroundColor = \"#1d1a1a\";\n  }\n  else{\n    setMode('dark')\n    // document.body.style.backgroundColor='white'\n  }\n  showAlert(`${cls} mode enabled!!`,\"success\")\n}\n  return (\n    <>\n      <Router>\n        <Navbar\n          mode={mode}\n          title=\"Harry Text Fun\"\n          aboutText=\"About Me\"\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm\n                heading=\"Enter your text below to analyze\"\n                mode={mode}\n                toggleMode={toggleMode}\n                showAlert={showAlert}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n    }\n    \nexport default App;\n    \n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}